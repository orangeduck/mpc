 ident     : /[a-zA-Z_][a-zA-Z0-9_]*/ ;                           
 number    : /[0-9]+/ ;                                           
 character : /'.'/ ;                                              
 string    : /"(\\.|[^\"])*"/ ;                               
                                                                  
 factor    : '(' <lexp> ')'                                       
           | <number>                                             
           | <character>                                          
           | <string>                                             
           | <ident> '(' <lexp>? (',' <lexp>)* ')'                
           | <ident> ;                                            
                                                                  
 term      : <factor> (('*' | '/' | '%') <factor>)* ;             
 lexp      : <term> (('+' | '-') <term>)* ;                       
                                                                  
 stmt      : '{' <stmt>* '}'                                      
           | "while" '(' <exp> ')' <stmt>                       
           | "if"    '(' <exp> ')' <stmt>                       
           | <ident> '=' <lexp> ';'                               
           | "print" '(' <lexp>? ')' ';'                        
           | "return" <lexp>? ';'                               
           | <ident> '(' <ident>? (',' <ident>)* ')' ';' ;        
                                                                  
 exp       : <lexp> '>' <lexp>                                    
           | <lexp> '<' <lexp>                                    
           | <lexp> ">=" <lexp>                                 
           | <lexp> "<=" <lexp>                                 
           | <lexp> "!=" <lexp>                                 
           | <lexp> "==" <lexp> ;                               
                                                                  
 typeident : ("int" | "char") <ident> ;                       
 decls     : (<typeident> ';')* ;                                 
 args      : <typeident>? (',' <typeident>)* ;                    
 body      : '{' <decls> <stmt>* '}' ;                            
 procedure : ("int" | "char") <ident> '(' <args> ')' <body> ; 
 main      : "main" '(' ')' <body> ;                            
 includes  : ("#include" <string>)* ;                           
 smallc    : /^/ <includes> <decls> <procedure>* <main> /$/ ;     
